// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

model User {
  id        String   @id @default(cuid())
  username  String   @unique
  email     String   @unique
  password  String
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  cvs        Cv[]
}

model Cv {
  id        String   @id @default(cuid())
  name      String
  firstName String
  age       Int
  cin       String
  job       String
  path      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  skills    Skill[]
}

model Skill {
  id          String   @id @default(cuid())
  designation String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  cvs       Cv[]

}

model Message {
  id        String   @id @default(uuid())
  sender    String
  content   String
  timestamp DateTime @default(now())
  replyTo   String?   // optional: reply to another message
  reactions Json      @default("{}") // emoji â†’ Reactors id array

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}



